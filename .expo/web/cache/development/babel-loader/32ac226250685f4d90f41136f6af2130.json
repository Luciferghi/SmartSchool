{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\LuciferG\\\\Desktop\\\\nitschool\\\\screens\\\\LoginScreen.js\";\nimport React, { memo, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Actions } from 'react-native-router-flux';\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var myfun = function myfun() {\n    return _regeneratorRuntime.async(function myfun$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://nitschool.ga/api/login\", {\n              method: 'POST',\n              headers: {\n                'Accept': 'Application/json',\n                'Content-Type': 'Applicaton/json'\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (resData) {\n              if (resData.message) {\n                Actions.main();\n              } else {\n                alert(\"Wrong Credentials\");\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Welcome To NitSchool\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: myfun,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? Contact School [\"), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(LoginScreen);","map":{"version":3,"sources":["C:/Users/LuciferG/Desktop/nitschool/screens/LoginScreen.js"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","Actions","LoginScreen","email","setEmail","password","setPassword","myfun","fetch","method","headers","body","JSON","stringify","then","res","json","resData","message","main","alert","value","styles","forgotPassword","label","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport BackButton from '../components/BackButton';\r\nimport { theme } from '../core/theme';\r\nimport {AsyncStorage} from 'react-native';\r\nimport { Actions } from 'react-native-router-flux';\r\n\r\nconst LoginScreen = () => {\r\n   const [email, setEmail] = useState();\r\n   const [password, setPassword] = useState();\r\n\r\n  \r\n  const myfun = async() => {\r\n  await fetch(\"https://nitschool.ga/api/login\",{\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'Application/json',\r\n      'Content-Type': 'Applicaton/json'\r\n    },\r\n    body: JSON.stringify({\"email\": email, \"password\": password })\r\n  }).then(res => res.json())\r\n  .then(resData => {\r\n   if(resData.message){\r\n     Actions.main();\r\n    // alert(resData.data.user.full_name);\r\n   }\r\n   else{\r\n     alert(\"Wrong Credentials\");\r\n   }\r\n  });\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <Logo />\r\n\r\n      <Header>Welcome To NitSchool</Header>\r\n\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email}\r\n        onChangeText={(value) => setEmail(value)}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password}\r\n        onChangeText={(value) => setPassword(value)}\r\n        secureTextEntry\r\n      />\r\n\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          \r\n        >\r\n          <Text style={styles.label}>Forgot your password?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Button mode=\"contained\" onPress={myfun}>\r\n        Login\r\n      </Button>\r\n\r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>Don’t have an account? Contact School [</Text>\r\n        <TouchableOpacity >\r\n          <Text style={styles.link}></Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  label: {\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n\r\nexport default memo(LoginScreen);"]},"metadata":{},"sourceType":"module"}